library identifier: "testJob@${PIPELINE_BRANCH}", retriever: modernSCM(
[$class: 'GitSCMSource',
remote: "${SHARED_LIB_REPOSITORY}"])

def test_repository = collectParamsEnv("TEST_REPOSITORY")

def test_branch = collectParamsEnv("TEST_BRANCH")
def test_repository_subfolder = collectParamsEnv("TEST_REPOSITORY_SUBFOLDER")
def test_project_dir = collectParamsEnv("TEST_PROJECT_DIR")

def cert_copy_source_path = "/home/jenkins/certs"

pipeline {

    agent {
            label env.AGENT
    }

    stages {
        stage ("Checkout and Setup"){
            steps {
                script {
                    checkout([$class: 'GitSCM', branches: [[name: "${test_branch}"]], doGenerateSubmoduleConfigurations: false, extensions: [[$class: 'RelativeTargetDirectory', relativeTargetDir: "${test_repository_subfolder}"]], gitTool: 'Default', submoduleCfg: [], userRemoteConfigs: [[url: "${test_repository}"]]])
                    checkout([$class: 'GitSCM', branches: [[name: "${library_branch}"]], doGenerateSubmoduleConfigurations: false, extensions: [[$class: 'RelativeTargetDirectory', relativeTargetDir: "${library_repository_subfolder}"]], gitTool: 'Default', submoduleCfg: [], userRemoteConfigs: [[url: "${library_repository}"]]])
                    sh """
                        ls -la
                        echo $WORKSPACE
                        sudo rm -f $WORKSPACE/$test_project_dir/data/ca.cert.pem
                        sudo rm -f $WORKSPACE/$test_project_dir/data/tsa.cert.pem
                        sudo rm -f $WORKSPACE/$test_project_dir/data/ocsp.cert.pem
                        mkdir -p $WORKSPACE/$test_project_dir/data
                        cp -f $cert_copy_source_path/ca.cert.pem $WORKSPACE/$test_project_dir/data/ca.cert.pem
                        cp -f $cert_copy_source_path/tsa.cert.pem $WORKSPACE/$test_project_dir/data/tsa.cert.pem
                        cp -f $cert_copy_source_path/ocsp.cert.pem $WORKSPACE/$test_project_dir/data/ocsp.cert.pem
                    """
                }
            }
        }
        stage ("Build") {
            steps {
            	sh """
        			vncserver :$DISPLAY_NUMBER -geometry 1920x1080 || true
        			export DISPLAY=:$DISPLAY_NUMBER
        			export PYTHONPATH=$WORKSPACE/$library_repository_subfolder
        			export PATH=$PATH:/home/jenkins/webdrivers/geckodriver_linux64
        			ls -la
        			env
        			cd $test_project_dir
        			ls -la
        			echo $test_project_dir
        			bash -l -c "python -m robot.run -d test_reports --variable BROWSER:ff --variable "TESTDATA:${TEST_DATA}" ${TEST_OR_PROFILE_NAME}"
        			cd $WORKSPACE
        		 """
            }
        }
    }

    post {
        always {
            publishHTML([allowMissing: false, alwaysLinkToLastBuild: false, keepAll: false, reportDir: '$test_project_dir/test_reports', reportFiles: 'log.html', reportName: 'HTML Report', reportTitles: ''])
        }
    }
}
