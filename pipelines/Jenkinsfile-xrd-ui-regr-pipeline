library identifier: "testJob@${PIPELINE_BRANCH}", retriever: modernSCM(
[$class: 'GitSCMSource',
remote: "${SHARED_LIB_REPOSITORY}"])

node {

    def jobparams = params.collect{
        string(name: it.key, value: it.value)
    }

    echo("Node parameters list: '${jobparams}'")
    def test_environment_type = env.ENV_TYPE
    def test_environment_type_upp = env.ENV_TYPE.toUpperCase()
    def quiet_period = env.QUIET_PERIOD.toInteger()


    jobparams += [string(name: "SENSITIVE_REPOSITORY", value: env.SENSITIVE_REPOSITORY)]
    jobparams += [string(name: "SENSITIVE_REPOSITORY_SUBFOLDER", value: env.SENSITIVE_REPOSITORY_SUBFOLDER)]
    jobparams += [string(name: "SENSITIVE_TESTDATA_DIR", value: env.SENSITIVE_TESTDATA_DIR)]
    jobparams += [string(name: "SENSITIVE_DATA_DIR", value: env.SENSITIVE_DATA_DIR)]
    jobparams += [string(name: "TEST_REPOSITORY", value: env.TEST_REPOSITORY)]
    jobparams += [string(name: "SENSITIVE_BRANCH", value: env.SENSITIVE_BRANCH)]
    jobparams += [string(name: "TEST_REPOSITORY_SUBFOLDER", value: env.TEST_REPOSITORY_SUBFOLDER)]
    jobparams += [string(name: "AGENT", value: env.AGENT)]
    echo("Node parameters list: '${jobparams}'")

    stage("prepare ${test_environment_type} servers") {
       if(params.RESET_SERVERS == "True") {
            echo("LOCAL HARD RESET")
            build job: "soft-reset-${test_environment_type}-all", quietPeriod: quiet_period
       }
    }

    stage("execute install ui configuration ${test_environment_type} servers") {
       build job: "lxd-xrd-ui-regr-configure-servers", quietPeriod: quiet_period, parameters: jobparams
    }

    testJob("environment-job-lxd-make-backup", jobparams, quiet_period, currentBuild)

    testJob("lxd-xrd-ui-regr-global-configuration", jobparams, quiet_period, currentBuild)
    testJob("lxd-xrd-ui-regr-cs-server-management", jobparams, quiet_period, currentBuild)
    testJob("lxd-xrd-ui-regr-ss-server-management", jobparams, quiet_period, currentBuild)
    testJob("lxd-xrd-ui-regr-keys-and-certs", jobparams, quiet_period, currentBuild)
    testJob("lxd-xrd-ui-regr-deletion-of-objects", jobparams, quiet_period, currentBuild)

    testJob("lxd-xrd-ui-regr-est-test-runner", jobparams, quiet_period, currentBuild)
}
